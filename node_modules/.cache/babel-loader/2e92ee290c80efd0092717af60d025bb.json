{"ast":null,"code":"var _jsxFileName = \"D:\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\phoneBook\\\\ContactForm.jsx\";\nimport React, { Component } from \"react\";\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      const form = evt.currentTarget;\n      const {\n        name,\n        number\n      } = this.state;\n      const id = nanoid();\n      const isNameExists = this.props.contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase());\n\n      if (isNameExists) {\n        alert(\"Contact with this name already exists in the phonebook.\");\n        return;\n      }\n\n      this.props.onSubmit({\n        id,\n        name,\n        number\n      });\n      form.reset();\n    };\n\n    this.handleInputChange = evt => {\n      const {\n        name,\n        value\n      } = evt.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        className: \"input-name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        value: this.state.name,\n        onChange: this.handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"number\",\n        children: \"Phone Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        value: this.state.number,\n        onChange: this.handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["D:/goit-react-hw-02-phonebook/src/components/phoneBook/ContactForm.jsx"],"names":["React","Component","nanoid","ContactForm","state","name","number","handleSubmit","evt","preventDefault","form","currentTarget","id","isNameExists","props","contacts","some","contact","toLowerCase","alert","onSubmit","reset","handleInputChange","value","target","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCG,KADkC,GAC1B;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD0B;;AAAA,SAMlCC,YANkC,GAMnBC,GAAG,IAAI;AACpBA,MAAAA,GAAG,CAACC,cAAJ;AACA,YAAMC,IAAI,GAAGF,GAAG,CAACG,aAAjB;AACA,YAAM;AAAEN,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAmB,KAAKF,KAA9B;AACA,YAAMQ,EAAE,GAAGV,MAAM,EAAjB;AAEA,YAAMW,YAAY,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAClBC,OAAD,IAAaA,OAAO,CAACZ,IAAR,CAAaa,WAAb,OAA+Bb,IAAI,CAACa,WAAL,EADzB,CAArB;;AAGA,UAAIL,YAAJ,EAAkB;AAChBM,QAAAA,KAAK,CAAC,yDAAD,CAAL;AACA;AACD;;AAED,WAAKL,KAAL,CAAWM,QAAX,CAAoB;AAAER,QAAAA,EAAF;AAAMP,QAAAA,IAAN;AAAYC,QAAAA;AAAZ,OAApB;AACAI,MAAAA,IAAI,CAACW,KAAL;AACD,KAtBiC;;AAAA,SAwBlCC,iBAxBkC,GAwBdd,GAAG,IAAI;AACzB,YAAM;AAAEH,QAAAA,IAAF;AAAQkB,QAAAA;AAAR,UAAkBf,GAAG,CAACgB,MAA5B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACpB,IAAD,GAAQkB;AAAV,OAAd;AACD,KA3BiC;AAAA;;AA6BlCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKnB,YAArB;AAAmC,MAAA,SAAS,EAAC,MAA7C;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAC,YAHZ;AAIE,QAAA,OAAO,EAAC,wHAJV;AAKE,QAAA,KAAK,EAAC,wIALR;AAME,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,IANpB;AAOE,QAAA,QAAQ,EAAE,KAAKiB,iBAPjB;AAQE,QAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAC,wFAHV;AAIE,QAAA,KAAK,EAAC,8FAJR;AAKE,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWE,MALpB;AAME,QAAA,QAAQ,EAAE,KAAKgB,iBANjB;AAOE,QAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,cAbF,eAsBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAxDiC;;AA2DpC,eAAenB,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { nanoid } from 'nanoid';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    const form = evt.currentTarget;\r\n    const { name, number } = this.state;\r\n    const id = nanoid();\r\n    \r\n    const isNameExists = this.props.contacts.some(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n    if (isNameExists) {\r\n      alert(\"Contact with this name already exists in the phonebook.\");\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit({ id, name, number });\r\n    form.reset();\r\n  }\r\n\r\n  handleInputChange = evt => {\r\n    const { name, value } = evt.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"form\">\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"input-name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          value={this.state.name}\r\n          onChange={this.handleInputChange}\r\n          required\r\n        />\r\n        <label htmlFor=\"number\">Phone Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          value={this.state.number}\r\n          onChange={this.handleInputChange}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}